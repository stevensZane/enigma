# command_handler.py
from commands import commands
import webbrowser
import random

def get_polite_fallback():
    """Returns random polite phrases for unrecognized commands"""
    phrases = [
        "D√©sol√©, je ne reconnais pas cette commande. Vous pouvez consulter les commandes disponibles.",
        "Je ne suis pas s√ªr de comprendre. Voici quelques exemples de commandes que vous pouvez essayer.",
        "Cette instruction ne fait pas partie de mes comp√©tences actuelles. Essayez une commande connue.",
        "Je n'ai pas compris. Pour voir ce que je peux faire, dites par exemple : 'liste des commandes'.",
        "Cette commande n‚Äôest pas disponible. Besoin d‚Äôaide ? Dites : 'quelles sont les commandes disponibles'.",
        "Hmm... cela ne me dit rien. Vous pouvez demander 'aide' pour voir mes commandes.",
        "Je ne suis pas programm√© pour cela. Consultez les commandes prises en charge pour continuer.",
        "Commande inconnue. Pour voir les instructions disponibles, dites simplement 'aide'."
    ]
    return random.choice(phrases)

def handle_command(texte):
    """
    G√®re et ex√©cute une commande reconnue ou une recherche dynamique.

    Retourne :
        Tuple : (bool√©en succ√®s, str r√©ponse)
    """
    texte = texte.lower().strip()

    # Commandes de recherche dynamique
    commandes_recherche = {
        "recherche sur youtube": lambda query: f"https://youtube.com/results?search_query={query}",
        "recherche sur wikipedia": lambda query: f"https://fr.wikipedia.org/wiki/{query.replace(' ', '_')}",
        "recherche": lambda query: f"https://google.com/search?q={query}",
        "cherche": lambda query: f"https://google.com/search?q={query}",
        "trouve": lambda query: f"https://google.com/search?q={query}",
        "google": lambda query: f"https://google.com/search?q={query}",
    }

    for cmd in commandes_recherche:
        if cmd in texte:
            requete = texte.replace(cmd, "").strip()
            if not requete:
                return (False, "Quelle recherche souhaitez-vous effectuer ?")
            url = commandes_recherche[cmd](requete)
            webbrowser.open(url)
            print(f"üîé Recherche effectu√©e : {requete}")
            return (True, f"Recherche lanc√©e pour : {requete}")

    # Commandes pr√©d√©finies (fixes)
    if texte in commands:
        print(f"Commande reconnue : {texte}")
        try:
            commands[texte]()  # Ex√©cuter la fonction associ√©e
            return (True, "")
        except Exception as e:
            erreur = f"Erreur d'ex√©cution : {str(e)}"
            print(f"Erreur lors de l'ex√©cution de '{texte}' : {e}")
            return (False, erreur)

    # Si aucune commande trouv√©e
    reponse_polie = get_polite_fallback()
    print(f"Commande inconnue : {texte} ‚Üí {reponse_polie}")
    return (False, reponse_polie)
